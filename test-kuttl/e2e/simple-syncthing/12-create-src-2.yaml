---
apiVersion: kuttl.dev/v1beta1
kind: TestStep
commands:
  - timeout: 600
    script: |
      TARGET_RS="syncthing-1"
      SOURCE_RS="syncthing-2"
      SOURCE_PVC="test-data-2"

      # wait for ${TARGET_RS} to be available
      echo "waiting for ${TARGET_RS} to be ready..."
      kubectl wait --for=condition=Reconciled replicationsource ${TARGET_RS} -n "${NAMESPACE}" --timeout=600s

      ST_ADDRESS=""
      ST_DEVICE_ID=""
      # block the script until `ST_ADDRESS` and `ST_DEVICE_ID` are not empty
      while [ -z "${ST_ADDRESS}" ] || [ -z "${ST_DEVICE_ID}" ]; do
        echo "Waiting for ${TARGET_RS} to be ready..."
        sleep 5
        ST_ADDRESS=$(kubectl get replicationsource ${TARGET_RS} -n "${NAMESPACE}" -o jsonpath="{.status.syncthing.address}")
        ST_DEVICE_ID=$(kubectl get replicationsource ${TARGET_RS} -n "${NAMESPACE}" -o jsonpath="{.status.syncthing.ID}")
      done

      echo "${TARGET_RS} address: ${ST_ADDRESS}"
      echo "${TARGET_RS} deviceID: ${ST_DEVICE_ID}"

      read -r -d '' syncthing_yaml << EOM
      ---
      apiVersion: volsync.backube/v1alpha1
      kind: ReplicationSource
      metadata:
        name: ${SOURCE_RS}
      spec:
        sourcePVC: ${SOURCE_PVC}
        syncthing:
          serviceType: ClusterIP
          peers:
          - address: ${ST_ADDRESS}
            ID: ${ST_DEVICE_ID}
            introducer: true
      EOM

      cat <<EOF | kubectl apply -n "${NAMESPACE}" -f -
      ${syncthing_yaml}
      EOF
